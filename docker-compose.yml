# Use postgres/example user/password credentials
version: '3.9'

services:
  broker:
    image: bitnami/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
    environment:
       KAFKA_BROKER_ID: 1
       KAFKA_CFG_NODE_ID: 1
       KAFKA_PROCESS_ROLES: broker,controller
       KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://:9093
       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
       KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
       KAFKA_NUM_PARTITIONS: 3
      #  KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #  KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      #  KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      #  KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      #  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      #  KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093

  db:
    image: postgres
    restart: 'always'
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_DB: chat_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: pwd
    ports:
      - 5431:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
